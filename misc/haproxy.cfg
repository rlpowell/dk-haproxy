global
    maxconn 50000
    log stdout format raw local0
    nbthread 16

    ssl-default-bind-options force-tlsv12 no-tls-tickets
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256

# Each "defaults" section applies until the next one is encountered;
# these defaults affect the non-http endpoints
defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s

    log global

    maxconn 3000

# Non-http endpoints go here

# Stats access
listen stats
    bind :8900
    mode http
    stats enable
    stats uri     /admin?stats
    stats refresh 5s

# Defaults for all http/https endpoints
defaults
    timeout connect 10s
    timeout client 60s
    timeout server 60s

    log global

    maxconn 3000
    mode http
    option httplog
    option httpchk
    option forwardfor
    option log-health-checks

    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# Main digitalkingdom.org web server
frontend dk-http-front
    bind *:19280
    default_backend dk-http-back

    capture request header Host len 64
    log-format "%ci:%cp [%tr] %ft %b/%s %ST %B %{+Q}hr %{+Q}r %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs"

    # Test URI to see if its a letsencrypt request
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl

    # dlp config
    use_backend dlp-back if { hdr_dom(host) -i davidleepowell }

    # robin personal tiki config
    use_backend robintw-back if { hdr_beg(host) -i robin. }

    # rlp pro tiki config
    use_backend rlptw-back if { hdr_beg(host) -i rlp. }

    # robin gaming tiki config
    use_backend gamingtw-back if { hdr_beg(host) -i gaming. }

    # hblog config
    use_backend hblog-back if { hdr_end(host) -i rlpowell.name }
    use_backend hblog-back if { hdr_end(host) -i robinleepowell.name }

frontend dk-https-front
    bind *:19243 ssl crt /etc/letsencrypt/live/digitalkingdom.org/haproxy.pem
    default_backend dk-http-back

    capture request header Host len 64
    log-format "%ci:%cp [%tr] %ft %b/%s %ST %B %{+Q}hr %{+Q}r %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs"

    # Test URI to see if its a letsencrypt request
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl

    # dlp config
    use_backend dlp-back if { hdr_dom(host) -i davidleepowell }

    # robin personal tiki config
    use_backend robintw-back if { hdr_beg(host) -i robin. }

    # rlp pro tiki config
    use_backend rlptw-back if { hdr_beg(host) -i rlp. }

    # robin gaming tiki config
    use_backend gamingtw-back if { hdr_beg(host) -i gaming. }

    # hblog config
    use_backend hblog-back if { hdr_end(host) -i rlpowell.name }
    use_backend hblog-back if { hdr_end(host) -i robinleepowell.name }

backend dk-http-back
    http-check send meth HEAD uri / hdr Host www.digitalkingdom.org
    server dk-http-back-web stodi:8080 check inter 90000

# dlp config
backend dlp-back
    http-check send meth HEAD uri / hdr Host davidleepowell.com
    server dlp-back-web lebna:19480 check inter 90000

# robin personal tiki config
backend robintw-back
    http-check send meth HEAD uri / hdr Host robin.digitalkingdom.org
    server robintw-back-web stodi:19680 check inter 90000

# rlp pro tiki config
backend rlptw-back
    http-check send meth HEAD uri / hdr Host rlp.digitalkingdom.org
    server rlptw-back-web lebna:19780 check inter 90000

# robin gaming tiki config
backend gamingtw-back
    http-check send meth HEAD uri / hdr Host gaming.digitalkingdom.org
    server gamingtw-back-web lebna:19880 check inter 90000

# hblog config
backend hblog-back
    http-check send meth HEAD uri / hdr Host www.digitalkingdom.org
    server hblog-back-web stodi:8080 check inter 90000

    # Rewrite to point to rlpowell's homedir
    http-request set-path /~rlpowell/hblog/%[path]
    # Rewrite redirects as ProxyPassReverse does
    acl response-is-redirect res.hdr(Location) -m found
    http-response replace-header Location (.*)/~rlpowell/hblog/(.*) \1/\2  if response-is-redirect

# LE Backend
backend letsencrypt-backend
    server letsencrypt 127.0.0.1:8888
